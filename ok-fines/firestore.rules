rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    function isAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isTreasurer() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'treasurer';
    }

    function isStudent() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'student';
    }

    match /users/{userId} {
      allow read: if isAdmin() || (isSignedIn() && request.auth.uid == userId);
      allow write: if isAdmin() || (isStudent() && request.auth.uid == userId);
    }

    match /contributions/{contributionId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isAdmin();
    }

    match /payments/{paymentId} {
      allow read: if isSignedIn();
      // Treasurer can create payments for their homeroom
      allow create: if isTreasurer();
      // Admin can approve/reject (update)
      allow update: if isAdmin();
      // No deletes in MVP
    }
  }
}
